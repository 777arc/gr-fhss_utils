<?xml version="1.0"?>
<block>
  <name>FSK CFO Estimate</name>
  <key>fhss_utils_fsk_cfo_estimate</key>
  <category>[Sandia]/FHSS Utilities</category>
  <import>import fhss_utils</import>
  <make>fhss_utils.fsk_cfo_estimate($search_depth, $start_offset, $samples_to_average, $threshold, $start_finder_taps)</make>

  <param>
    <name>Search Depth</name>
    <key>search_depth</key>
    <value>2000</value>
    <type>int</type>
  </param>
  <param>
    <name>Start Offset</name>
    <key>start_offset</key>
    <value>0</value>
    <type>int</type>
  </param>
  <param>
    <name>Samples to Average</name>
    <key>samples_to_average</key>
    <value>100</value>
    <type>int</type>
  </param>
  <param>
    <name>Threshold</name>
    <key>threshold</key>
    <value>0.5</value>
    <type>real</type>
  </param>
  <param>
    <name>Start Finder Taps</name>
    <key>start_finder_taps</key>
    <value>firdes.low_pass_2(1, 1, 0.1, 0.1, 40)</value>
    <type>real_vector</type>
  </param>

  <sink>
    <name>pdu_in</name>
    <type>message</type>
  </sink>
  <source>
    <name>pdu_out</name>
    <type>message</type>
  </source>

  <doc>
Estimates and corrects the CFO of a complex (undemodulated) FSK PDU burst.

Does this by taking the magnitude of the signal, applying the start finder filter, then looking up to search_depth samples for the point where the magnitude crosses threshold*max_magnitude.

Once the start point is found, skip start_offset samples and demodulate the next samples_to_average samples. The CFO is the average of the demodulated samples.

The output is frequency shifted by the CFO estimate.
  </doc>

</block>
